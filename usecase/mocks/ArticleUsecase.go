// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	model "kumparan/model"

	mock "github.com/stretchr/testify/mock"
)

// ArticleUsecase is an autogenerated mock type for the ArticleUsecase type
type ArticleUsecase struct {
	mock.Mock
}

// Create provides a mock function with given fields: article
func (_m *ArticleUsecase) Create(article model.Article) (*model.Article, error) {
	ret := _m.Called(article)

	var r0 *model.Article
	if rf, ok := ret.Get(0).(func(model.Article) *model.Article); ok {
		r0 = rf(article)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Article)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(model.Article) error); ok {
		r1 = rf(article)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Get provides a mock function with given fields: params
func (_m *ArticleUsecase) Get(params model.ViewArticleReq) (*[]model.Article, error) {
	ret := _m.Called(params)

	var r0 *[]model.Article
	if rf, ok := ret.Get(0).(func(model.ViewArticleReq) *[]model.Article); ok {
		r0 = rf(params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]model.Article)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(model.ViewArticleReq) error); ok {
		r1 = rf(params)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
